# Config for Wayfire
#
# Copy this to ~/.config/wayfire.ini and edit it to your liking.
#
# Take the tutorial to get started.
# https://github.com/WayfireWM/wayfire/wiki/Tutorial
#
# Read the Configuration document for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration

# TODO: Banish mouse cursor with ydotool or smth
# TODO: While "taking windows to another workspace with you" REMAIN FOCUSED ON THAT WINDOW!!!
# TODO: Tiling Layouts???
# TODO: Theming exit layout
# TODO: Viewbox sky in cube
# TODO: make colorful section slashes instead of '|' for yambar separation
# TODO: yambar highlight according to workspace
# TODO: spawn some windows in separate workspaces or move them there when they are created (window rules)
# TODO: configure waybar! Check out waybar vs yambar.
# TODO: configure wlogout
# TODO: make wofi execute even without matches. -e doesn't do this for some reason... maybe try again? ;)
# TODO: configure mako
# TODO: Learn how to make plugins (https://wayfire.org/2020/04/10/Writing-Plugins.html)
# TODO: Add a Focus border
# TODO: Find Proper tiling plugin
# TODO: Tofi, Make plugin/change code to allow for fill in selected command in input to continue typing
# TODO: Wayvnc?
# DONE: configure swaylock | Awesome! Maybe there is a fade/grace plugin I don't know about???
# DONE: configure tofi, replacement for wofi | Best only problem is you can't hit a keybinding to fill the selected command but probably can code it in later
# DONE: configure wofi | lamest thing ever buggy and exec_search doesn't work + super slow + latency
# DONE: Fix emacs blacking out and hanging (Emacs -Q is fine but something in my config...) | Two lines setting frame size to 1920x1080 in init.el
# DONE: Find out why some keybindings just refuse to work anymore like Super-p & Super-b | Duplicate key (value pairs)
# DONE: Build Emacs 30.0.50 with Pure GTK for wayland <3

# Input configuration ──────────────────────────────────────────────────────────

# Example configuration:

[input]
xkb_layout = us,ur
xkb_variant = qwerty,workman

# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

# Output configuration ─────────────────────────────────────────────────────────

# Example configuration:
#
# [output:eDP-1]
# mode = 1920x1080@60000
# position = 0,0
# transform = normal
# scale = 1.000000
#
# You can get the names of your outputs with wlr-randr.
# https://github.com/emersion/wlr-randr
#
# See also kanshi for configuring your outputs automatically.
# https://wayland.emersion.fr/kanshi/
#
# See Output options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# Core options ─────────────────────────────────────────────────────────────────

[core]

# List of plugins to be enabled.
# See the Configuration document for a complete list.
  plugins = \
  alpha \
  animate \
  autostart \
  command \
  simple-tile \
  cube \
  \ #decoration \
  expo \
  fast-switcher \
  fisheye \
  \ #foreign-toplevel \
  grid \
  \ #gtk-shell \
  idle \
  invert \
  move \
  oswitch \
  place \
  resize \
  switcher \
  vswitch \
  window-rules \
  wm-actions \
  wobbly \
  wrot \
  zoom \
  blur

# Note: [blur] is not enabled by default, because it can be resource-intensive.
# Feel free to add it to the list if you want it.
# You can find its documentation here:
# https://github.com/WayfireWM/wayfire/wiki/Configuration#blur

# Close focused window.
close_top_view = <super> KEY_Q | <alt> KEY_F4

# Workspaces arranged into a grid: 3 × 3.
vwidth = 3
vheight = 3

# Prefer client-side decoration or server-side decoration
preferred_decoration_mode = server

# Mouse bindings ───────────────────────────────────────────────────────────────

# Drag windows by holding down Super and left mouse button.
[move]
activate = <super> BTN_LEFT

# Resize them with right mouse button + Super.
[resize]
activate = <super> BTN_RIGHT

# Zoom in the desktop by scrolling + Super.
[zoom]
modifier = <super>

# Change opacity by scrolling with Super + Alt.
[alpha]
modifier = <super> <alt>

# [wobbly]
# friction = 3.0
# spring_k = 8.0
# grid-resolution = 10

# Rotate windows with the mouse.
[wrot]
activate = <super> <ctrl> BTN_RIGHT

# Fisheye effect.
[fisheye]
toggle = <super> <ctrl> KEY_F

[blur]
toggle = <super> KEY_B
mode = kawase
kawase_offset = 1

# Startup commands ─────────────────────────────────────────────────────────────

[autostart]

# Automatically start background and panel.
# Set to false if you want to override the default clients.
autostart_wf_shell = false
# Set the wallpaper, start a panel and dock if you want one.
# https://github.com/WayfireWM/wf-shell
#
# These are started by the autostart_wf_shell option above.
#
# background = wf-background
# panel = wf-panel
# dock = wf-dock

# Background/Wallpaper
wallpaper = swww init

# Status Bar
status_bar = yambar

emacs = XDG_BACKEND=Wayland && emacsclient -c -a "emacs"

browser = qutebrowser

# Output configuration
# https://wayland.emersion.fr/kanshi/
#outputs = kanshi

# Notifications
# https://wayland.emersion.fr/mako/
notifications = mako

# Screen color temperature
# https://sr.ht/~kennylevinsen/wlsunset/
gamma = wlsunset -s 05:51

# Idle configuration
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle before-sleep swaylock

# XDG desktop portal
# Needed by some GTK applications
portal = /usr/libexec/xdg-desktop-portal
#keypassxc = keypassxc
#element = element-desktop

# Example configuration:
#
# [idle]
# toggle = <super> KEY_Z
# screensaver_timeout = 300
# dpms_timeout = 600
#
# Disables the compositor going idle with Super + z.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds.

# Applications ─────────────────────────────────────────────────────────────────

[command]

# Start a terminal
# https://github.com/alacritty/alacritty
binding_terminal = <super> KEY_ENTER
command_terminal = foot

# Start your launcher
# https://hg.sr.ht/~scoopta/wofi
# Note: Add mode=run or mode=drun to ~/.config/wofi/config.
# You can also specify the mode with --show option.
binding_launchers = <super> KEY_P
command_launchers = bash -c "$(bash -c 'compgen -c | sort -u' | tofi)"

# sentence="This is a sample sentence."
# # Replace spaces with newline characters
# words=$(echo "$sentence" | tr ' ' '\n')
# # Iterate over the words using a while loop
# while IFS= read -r word; do
#   echo "thing $word"
# done <<< "$words"

binding_launchers_drun = <super> <shift> KEY_P
command_launchers_drun = tofi-drun

binding_emacs = <super> <shift> KEY_E
command_emacs = XDG_BACKEND=Wayland && emacsclient -c -a ""

# Screen locker
# https://github.com/swaywm/swaylock
binding_lock = <super> <shift> KEY_ESC
command_lock = swaylock

# Logout
# https://github.com/ArtsyMacaw/wlogout
binding_logout = <super> KEY_BACKSPACE
command_logout = wlogout

binding_lockscreen = <super> <ctrl> KEY_BACKSPACE
command_lockscreen = swaylock

# Screenshots
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
binding_screenshot = <super> KEY_X
command_screenshot = grim ~/pix/scrots/$(date +%y%b%d-%H:%M:%S).$(uuidgen).png
binding_screenshot_edit = <super> <ctrl> KEY_X
command_screenshot_edit = grim - | swappy -f -
binding_screenshot_region = <super> <shift> KEY_X
command_screenshot_region = grim -g "$(slurp)" ~/pix/scrots/$(date +%y%b%d-%H:%M:%S).$(uuidgen).png
binding_screenshot_edit_region = <super> <alt> KEY_X
command_screenshot_edit_region = grim -g "$(slurp)" - | swappy -f -

# Volume controls
# https://alsa-project.org
repeatable_binding_volume_up = KEY_VOLUMEUP
command_volume_up = pamixer -i 5
repeatable_binding_volume_down = KEY_VOLUMEDOWN
command_volume_down = pamixer -d 5
binding_mute = KEY_MUTE
command_mute = pamixer --toggle-mute

# Screen brightness
# https://haikarainen.github.io/light/
repeatable_binding_light_up = KEY_BRIGHTNESSUP
command_light_up = light -A 5
repeatable_binding_light_down = KEY_BRIGHTNESSDOWN
command_light_down = light -U 5

# Windows ──────────────────────────────────────────────────────────────────────

# Actions related to window management functionalities.
#
# Example configuration:
#
[wm-actions]
toggle_fullscreen = <super> KEY_F
toggle_always_on_top = <super> KEY_U
toggle_sticky = <super> <shift> KEY_U

# Position the windows in certain regions of the output.
[grid]
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾   ‾
slot_bl = <super> KEY_KP1
slot_b = <super> KEY_KP2
slot_br = <super> KEY_KP3
slot_l = <super> KEY_LEFT | <super> KEY_KP4
slot_c = <super> KEY_UP | <super> KEY_KP5
slot_r = <super> KEY_RIGHT | <super> KEY_KP6
slot_tl = <super> KEY_KP7
slot_t = <super> KEY_KP8
slot_tr = <super> KEY_KP9
# Restore default.
restore = <super> KEY_DOWN | <super> KEY_KP0

# Change active window with an animation.
[switcher]
next_view = <super> KEY_TAB
prev_view = <super> <shift> KEY_TAB
speed = 500

# Simple active window switcher.
[fast-switcher]
activate = <alt> KEY_ESC

# Workspaces ───────────────────────────────────────────────────────────────────

# Switch to workspace.
[vswitch]
# Move to nth workspace
binding_1 = <super> KEY_1
binding_2 = <super> KEY_2
binding_3 = <super> KEY_3
binding_4 = <super> KEY_4
binding_5 = <super> KEY_5
binding_6 = <super> KEY_6
binding_7 = <super> KEY_7
binding_8 = <super> KEY_8
binding_9 = <super> KEY_9
# Move between the grid
binding_left = <ctrl> <super> KEY_H
binding_down = <ctrl> <super> KEY_J
binding_up = <ctrl> <super> KEY_K
binding_right = <ctrl> <super> KEY_L
# Move to nth workspace with window
with_win_1 = <super> <ctrl> <shift> KEY_1
with_win_2 = <super> <ctrl> <shift> KEY_2
with_win_3 = <super> <ctrl> <shift> KEY_3
with_win_4 = <super> <ctrl> <shift> KEY_4
with_win_5 = <super> <ctrl> <shift> KEY_5
with_win_6 = <super> <ctrl> <shift> KEY_6
with_win_7 = <super> <ctrl> <shift> KEY_7
with_win_8 = <super> <ctrl> <shift> KEY_8
with_win_9 = <super> <ctrl> <shift> KEY_9
# Move the focused window with the same key-bindings, but add Shift.
with_win_left = <ctrl> <super> <shift> KEY_H
with_win_down = <ctrl> <super> <shift> KEY_J
with_win_up = <ctrl> <super> <shift> KEY_K
with_win_right = <ctrl> <super> <shift> KEY_L

# Show the current workspace row as a cube.
[cube]
activate = <ctrl> <alt> BTN_LEFT
#background_mode = skydome
#deform = cylinder
#speed_zoom = 0.06
#skydome_texture = ~/pix/memes/spider-man-why-alibaba-suit.jpg
# Switch to the next or previous workspace.
#rotate_left = <super> <ctrl> KEY_H
#rotate_right = <super> <ctrl> KEY_L

# Show an overview of all workspaces.
[expo]
toggle = <super>
# Select a workspace.
# Workspaces are arranged into a grid of 3 × 3.
# The numbering is left to right, line by line.
#
# ⇱ k ⇲
# h ⏎ l
# ⇱ j ⇲
# ‾   ‾
# See core.vwidth and core.vheight for configuring the grid.
select_workspace_1 = KEY_1
select_workspace_2 = KEY_2
select_workspace_3 = KEY_3
select_workspace_4 = KEY_4
select_workspace_5 = KEY_5
select_workspace_6 = KEY_6
select_workspace_7 = KEY_7
select_workspace_8 = KEY_8
select_workspace_9 = KEY_9

# Outputs ──────────────────────────────────────────────────────────────────────

# Change focused output.
[oswitch]
# Switch to the next output.
next_output = <super> KEY_O
# Same with the window.
next_output_with_win = <super> <shift> KEY_O

# Invert the colors of the whole output.
[invert]
toggle = <super> KEY_I

# Rules ────────────────────────────────────────────────────────────────────────

[simple-tile]
button_move = <super> BTN_LEFT
button_resize = <super> BTN_RIGHT
key_focus_left = <super> KEY_H
key_focus_below = <super> KEY_J
key_focus_above = <super> KEY_K
key_focus_right = <super> KEY_L
key_toggle = <super> KEY_T
inner_gap_size = 4
outer_horiz_gap_size = 8
outer_vert_gap_size = 8

[window-rules]
# Prevent from blacking out till maximise and first resize. 
# unweirdify_emacs = on <event> if <condition> then <action>
# move_keepassxc = on created if app_id 
# maximize_alacritty = on created if app_id is "Alacritty" then maximize
#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules
